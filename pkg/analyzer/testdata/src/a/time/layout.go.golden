// Code generated by usestdlibvars, DO NOT EDIT.

package time_test

var (
	_ = time.Layout // want `"01/02 03:04:05PM '06 -0700" can be replaced by time\.Layout`
	_ = time.RFC822Z // want `"02 Jan 06 15:04 -0700" can be replaced by time\.RFC822Z`
	_ = time.RFC822 // want `"02 Jan 06 15:04 MST" can be replaced by time\.RFC822`
	_ = time.TimeOnly // want `"15:04:05" can be replaced by time\.TimeOnly`
	_ = time.DateOnly // want `"2006-01-02" can be replaced by time\.DateOnly`
	_ = time.DateTime // want `"2006-01-02 15:04:05" can be replaced by time\.DateTime`
	_ = time.RFC3339Nano // want `"2006-01-02T15:04:05\.999999999Z07:00" can be replaced by time\.RFC3339Nano`
	_ = time.RFC3339 // want `"2006-01-02T15:04:05Z07:00" can be replaced by time\.RFC3339`
	_ = time.Kitchen // want `"3:04PM" can be replaced by time\.Kitchen`
	_ = time.Stamp // want `"Jan _2 15:04:05" can be replaced by time\.Stamp`
	_ = time.StampMilli // want `"Jan _2 15:04:05\.000" can be replaced by time\.StampMilli`
	_ = time.StampMicro // want `"Jan _2 15:04:05\.000000" can be replaced by time\.StampMicro`
	_ = time.StampNano // want `"Jan _2 15:04:05\.000000000" can be replaced by time\.StampNano`
	_ = time.RubyDate // want `"Mon Jan 02 15:04:05 -0700 2006" can be replaced by time\.RubyDate`
	_ = time.ANSIC // want `"Mon Jan _2 15:04:05 2006" can be replaced by time\.ANSIC`
	_ = time.UnixDate // want `"Mon Jan _2 15:04:05 MST 2006" can be replaced by time\.UnixDate`
	_ = time.RFC1123Z // want `"Mon, 02 Jan 2006 15:04:05 -0700" can be replaced by time\.RFC1123Z`
	_ = time.RFC1123 // want `"Mon, 02 Jan 2006 15:04:05 MST" can be replaced by time\.RFC1123`
	_ = time.RFC850 // want `"Monday, 02-Jan-06 15:04:05 MST" can be replaced by time\.RFC850`
)

const (
	_ = time.Layout // want `"01/02 03:04:05PM '06 -0700" can be replaced by time\.Layout`
	_ = time.RFC822Z // want `"02 Jan 06 15:04 -0700" can be replaced by time\.RFC822Z`
	_ = time.RFC822 // want `"02 Jan 06 15:04 MST" can be replaced by time\.RFC822`
	_ = time.TimeOnly // want `"15:04:05" can be replaced by time\.TimeOnly`
	_ = time.DateOnly // want `"2006-01-02" can be replaced by time\.DateOnly`
	_ = time.DateTime // want `"2006-01-02 15:04:05" can be replaced by time\.DateTime`
	_ = time.RFC3339Nano // want `"2006-01-02T15:04:05\.999999999Z07:00" can be replaced by time\.RFC3339Nano`
	_ = time.RFC3339 // want `"2006-01-02T15:04:05Z07:00" can be replaced by time\.RFC3339`
	_ = time.Kitchen // want `"3:04PM" can be replaced by time\.Kitchen`
	_ = time.Stamp // want `"Jan _2 15:04:05" can be replaced by time\.Stamp`
	_ = time.StampMilli // want `"Jan _2 15:04:05\.000" can be replaced by time\.StampMilli`
	_ = time.StampMicro // want `"Jan _2 15:04:05\.000000" can be replaced by time\.StampMicro`
	_ = time.StampNano // want `"Jan _2 15:04:05\.000000000" can be replaced by time\.StampNano`
	_ = time.RubyDate // want `"Mon Jan 02 15:04:05 -0700 2006" can be replaced by time\.RubyDate`
	_ = time.ANSIC // want `"Mon Jan _2 15:04:05 2006" can be replaced by time\.ANSIC`
	_ = time.UnixDate // want `"Mon Jan _2 15:04:05 MST 2006" can be replaced by time\.UnixDate`
	_ = time.RFC1123Z // want `"Mon, 02 Jan 2006 15:04:05 -0700" can be replaced by time\.RFC1123Z`
	_ = time.RFC1123 // want `"Mon, 02 Jan 2006 15:04:05 MST" can be replaced by time\.RFC1123`
	_ = time.RFC850 // want `"Monday, 02-Jan-06 15:04:05 MST" can be replaced by time\.RFC850`
)

var (
	_ = func(s string)string{return s}(time.Layout) // want `"01/02 03:04:05PM '06 -0700" can be replaced by time\.Layout`
	_ = func(s string)string{return s}(time.RFC822Z) // want `"02 Jan 06 15:04 -0700" can be replaced by time\.RFC822Z`
	_ = func(s string)string{return s}(time.RFC822) // want `"02 Jan 06 15:04 MST" can be replaced by time\.RFC822`
	_ = func(s string)string{return s}(time.TimeOnly) // want `"15:04:05" can be replaced by time\.TimeOnly`
	_ = func(s string)string{return s}(time.DateOnly) // want `"2006-01-02" can be replaced by time\.DateOnly`
	_ = func(s string)string{return s}(time.DateTime) // want `"2006-01-02 15:04:05" can be replaced by time\.DateTime`
	_ = func(s string)string{return s}(time.RFC3339Nano) // want `"2006-01-02T15:04:05\.999999999Z07:00" can be replaced by time\.RFC3339Nano`
	_ = func(s string)string{return s}(time.RFC3339) // want `"2006-01-02T15:04:05Z07:00" can be replaced by time\.RFC3339`
	_ = func(s string)string{return s}(time.Kitchen) // want `"3:04PM" can be replaced by time\.Kitchen`
	_ = func(s string)string{return s}(time.Stamp) // want `"Jan _2 15:04:05" can be replaced by time\.Stamp`
	_ = func(s string)string{return s}(time.StampMilli) // want `"Jan _2 15:04:05\.000" can be replaced by time\.StampMilli`
	_ = func(s string)string{return s}(time.StampMicro) // want `"Jan _2 15:04:05\.000000" can be replaced by time\.StampMicro`
	_ = func(s string)string{return s}(time.StampNano) // want `"Jan _2 15:04:05\.000000000" can be replaced by time\.StampNano`
	_ = func(s string)string{return s}(time.RubyDate) // want `"Mon Jan 02 15:04:05 -0700 2006" can be replaced by time\.RubyDate`
	_ = func(s string)string{return s}(time.ANSIC) // want `"Mon Jan _2 15:04:05 2006" can be replaced by time\.ANSIC`
	_ = func(s string)string{return s}(time.UnixDate) // want `"Mon Jan _2 15:04:05 MST 2006" can be replaced by time\.UnixDate`
	_ = func(s string)string{return s}(time.RFC1123Z) // want `"Mon, 02 Jan 2006 15:04:05 -0700" can be replaced by time\.RFC1123Z`
	_ = func(s string)string{return s}(time.RFC1123) // want `"Mon, 02 Jan 2006 15:04:05 MST" can be replaced by time\.RFC1123`
	_ = func(s string)string{return s}(time.RFC850) // want `"Monday, 02-Jan-06 15:04:05 MST" can be replaced by time\.RFC850`
)
